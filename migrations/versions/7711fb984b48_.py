"""empty message

Revision ID: 7711fb984b48
Revises: d2a255374f0b
Create Date: 2022-06-12 21:40:15.287476

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
from sqlalchemy.sql.sqltypes import NullType

revision = '7711fb984b48'
down_revision = 'd2a255374f0b'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('merge_request',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('repositories_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('target_branch', sa.String(), nullable=False),
    sa.Column('source_branch', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['repositories_users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['repositories_id'], ['repositories.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('pipline_merge_requests',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('stage_transporter_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('status',  sa.String(), server_default='FUTURE', nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['stage_transporter_id'], ['stage_transporter.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_unique_constraint(None, 'repositories', ['id'])
    op.alter_column('repositories_token', 'id',
               existing_type=postgresql.UUID(),
               existing_nullable=False,
               autoincrement=True)
    op.create_unique_constraint(None, 'repositories_token', ['id'])
    op.create_unique_constraint(None, 'repositories_users', ['id'])

    stages_enum = sa.Enum('BUILD', 'TESTING', 'LINTERS', 'INSTALLATION', name='pipelinesenum')
    stages_enum.create(op.get_bind(), checkfirst=False)
    op.add_column('stage_transporter', sa.Column('stage', type_=stages_enum, nullable=True))
    op.drop_column('stage_transporter', 'status')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('stage_transporter')
    op.drop_column('stage_transporter', 'stage')
    op.drop_constraint(None, 'repositories_users', type_='unique')
    op.drop_constraint(None, 'repositories_token', type_='unique')
    op.alter_column('repositories_token', 'id',
               existing_type=sa.Integer(),
               type_=postgresql.UUID(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_constraint(None, 'repositories', type_='unique')
    op.drop_table('pipline_merge_requests')
    op.drop_table('merge_request')
    # ### end Alembic commands ###
